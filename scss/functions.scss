/*
    Copyright 2015 Jorge Rodriguez(jycr753)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

*/

.fa-spin {
  -webkit-animation: fa-spin 2s infinite linear;
  animation: fa-spin 2s infinite linear
}

@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg)
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg)
  }
}

@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg)
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg)
  }
}

.fa-rotate-90 {
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)
}

.fa-rotate-180 {
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2)
}

.fa-rotate-270 {
  -webkit-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  transform: rotate(270deg);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)
}

.fa-flip-horizontal {
  -webkit-transform: scale(-1, 1);
  -ms-transform: scale(-1, 1);
  transform: scale(-1, 1);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)
}

.fa-flip-vertical {
  -webkit-transform: scale(1, -1);
  -ms-transform: scale(1, -1);
  transform: scale(1, -1);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)
}

:root .fa-rotate-90, :root .fa-rotate-180, :root .fa-rotate-270, :root .fa-flip-horizontal, :root .fa-flip-vertical {
  filter: none
}


.fa-stack {
  line-height: 2em;
  position: relative;
  display: inline-block;
  width: 2em;
  height: 2em;
  vertical-align: middle
}

.fa-stack-1x, .fa-stack-2x {
  position: absolute;
  left: 0;
  width: 100%;
  text-align: center
}

.fa-stack-1x {
  line-height: inherit
}

.fa-stack-2x {
  font-size: 2em
}

.fa-inverse {
  color: #fff
}

@mixin transition($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}

/*
@include box-shadow(0, 1px, 0px, $color_input_light);
@include transition(all, $speed_animation_70s, ease);
*/

@mixin box-shadow($top, $left, $blur, $color: "", $inset: "") {
  -webkit-box-shadow: $top $left $blur #{$color} #{$inset};
  -moz-box-shadow: $top $left $blur #{$color} #{$inset};
  box-shadow: $top $left $blur #{$color} #{$inset};
}

@mixin linear-gradient($from_color, $to_color) {
  background-color: $to_color;
  background-image: -webkit-gradient(linear, left top, left bottom, from($from_color), to($to_color));
  background-image: -webkit-linear-gradient(top, $from_color, $to_color);
  background-image: -moz-linear-gradient(top, $from_color, $to_color);
  background-image: -ms-linear-gradient(top, $from_color, $to_color);
  background-image: -o-linear-gradient(top, $from_color, $to_color);
  background-image: linear-gradient(top, $from_color, $to_color);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, StartColorStr='#{$from_color}', EndColorStr='#{$to_color}');
}

@mixin get_gradiant($from_color, $to_color, $alpha:0.7){
  $from_red: red($from_color);
  $from_green: green($from_color);
  $from_blue: blue($from_color);
  $to_red: red($to_color);
  $to_green: green($to_color);
  $to_blue: blue($to_color);
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba($from_red, $from_green, $from_blue, $alpha)), to(rgba($to_red, $to_green, $to_blue,$alpha))) !important;
  background-image: -webkit-linear-gradient(top, rgba($from_red, $from_green, $from_blue, $alpha), rgba($to_red, $to_green, $to_blue,$alpha)) !important;
  background-image: -moz-linear-gradient(top, rgba($from_red, $from_green, $from_blue, $alpha), rgba($to_red, $to_green, $to_blue,$alpha)) !important;
  background-image: -o-linear-gradient(top, rgba($from_red, $from_green, $from_blue, $alpha), rgba($to_red, $to_green, $to_blue,$alpha)) !important;
  background-image: -ms-linear-gradient(top, rgba($from_red, $from_green, $from_blue, $alpha), rgba($to_red, $to_green, $to_blue,$alpha)) !important;
  background-image: linear-gradient(top, rgba($from_red, $from_green, $from_blue, $alpha), rgba($to_red, $to_green, $to_blue,$alpha)) !important;
}